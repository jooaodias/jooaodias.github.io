{"version":3,"sources":["webpack:///./src/components/SEO/SEO.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/images/foto.jpg"],"names":["SEO","_ref","pageTitle","description","keywords","meta","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","data","react_helmet__WEBPACK_IMPORTED_MODULE_4__","htmlAttributes","lang","title","site","siteMetadata","titleTemplate","name","content","author","property","siteUrl","ogImage","concat","_public_static_d_1642077325_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","string","arrayOf","object","defaultProps","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","isRequired","func","Header","state","isMenuOpen","handleMenu","_this","setState","previousState","closeMenu","siteTitle","burgerClass","react_default","className","gatsby_browser_entry","to","type","aria-label","onClick","aria-hidden","Component","Layout","Fragment","components_Header_Header","_755544856","node","components_Layout_Layout","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p"],"mappings":"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","file":"1-f52bab93c92f530a976e.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport ogImage from 'assets/images/foto.jpg';\r\n\r\nconst siteQuery = graphql`\r\n    query DefaultSEOQuery {\r\n        site{\r\n            siteMetadata{\r\n                title\r\n                author\r\n                siteUrl\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst SEO = ({\r\n    pageTitle,      \r\n    description,\r\n    keywords,\r\n    meta\r\n}) => (\r\n    <StaticQuery \r\n        query={siteQuery}\r\n        render={data =>(\r\n            <Helmet \r\n                htmlAttributes={{lang: 'en'}}\r\n                title={pageTitle || data.site.siteMetadata.title}\r\n                titleTemplate={pageTitle && `%s | ${data.site.siteMetadata.title}`}\r\n                meta={[\r\n                    {name: 'description', content: description},\r\n                    {name: 'keywords', content: keywords},\r\n                    {name: 'twitter:card', content:'summary'},\r\n                    {name: 'twitter:creator', content: data.site.siteMetadata.author},\r\n                    {name: 'twiiter:title', content: pageTitle},\r\n                    {name: 'twitter: description', content: description},\r\n                    {property: 'og:title', content: pageTitle},\r\n                    {property: 'og:description', content: description},\r\n                    {property: 'og:type', content: 'website'},\r\n                    {property: 'og:url', content: data.site.siteMetadata.siteUrl},\r\n                    {property: 'og:image', content: `${data.site.siteMetadata.siteUrl}${ogImage}`},\r\n                    {property: 'og:image:alt', content: description},\r\n                    {property: 'og:image:type', content: 'images/jpg'},\r\n                    {property: 'og:image:width', content: '662'},\r\n                    {property: 'og:image:height', content: '657'},\r\n                    \r\n                ].concat(meta)}\r\n            />\r\n        )}\r\n        />    \r\n);\r\n\r\nSEO.propTypes = {\r\n    pageTitle: PropTypes.string,\r\n    description: PropTypes.string,\r\n    keywords: PropTypes.string,\r\n    meta: PropTypes.arrayOf(PropTypes.object),\r\n}\r\n\r\nSEO.defaultProps = {\r\n    pageTitle: null,\r\n    description: '',\r\n    keywords: '',\r\n    meta: []\r\n}\r\n\r\nexport default SEO;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby'\n\nclass Header extends Component {\n  state = {\n    isMenuOpen: false,\n  }\n\n  handleMenu = () =>{\n    this.setState((previousState)=> ({\n        isMenuOpen: !previousState.isMenuOpen,\n      }))\n  }\n\n  closeMenu = () =>{\n    this.setState({isMenuOpen: false})\n  }\n\n  render = () =>{\n    const { siteTitle } = this.props;\n    const {isMenuOpen} = this.state;\n    const burgerClass = isMenuOpen ? 'is-active':'';\n    \n    return (\n      <nav className=\"navbar\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n              <Link className=\"navbar-item is-size-4\" to=\"/\">\n              {siteTitle}\n              </Link>\n            <button\n              className={`navbar-burger ${burgerClass}`}\n              type=\"button\"\n              aria-label=\"menu\"\n              onClick={this.handleMenu}\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </button>\n          </div>\n          <div className={`navbar-menu ${burgerClass}`}>\n            <div className=\"navbar-end\">\n              <Link \n                to=\"/\" \n                className=\"navbar-item is-size-5\"\n                onClick={this.closeMenu}\n              >Home</Link>\n              <Link \n                to=\"/projects\"\n                className=\"navbar-item is-size-5\"\n                onClick={this.closeMenu}\n              >Projects</Link>\n              <Link \n                to=\"/blog\"\n                className=\"navbar-item is-size-5\"\n                onClick={this.closeMenu}\n              >Groups</Link>\n              <Link \n                to=\"/stack\"\n                className=\"navbar-item is-size-5\"\n                onClick={this.closeMenu}\n              >Stack</Link>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from 'components/Header';\nimport 'styles/index.scss';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">\n          {children}\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","export {default} from './Layout';","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/foto-bd6854b034bc8c7e5f432866c334f878.jpg\";"],"sourceRoot":""}